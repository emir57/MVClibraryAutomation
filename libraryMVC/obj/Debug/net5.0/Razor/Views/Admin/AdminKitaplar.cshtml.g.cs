#pragma checksum "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\Admin\AdminKitaplar.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1263073e0e4d76b6d56ada1282d723f60afaaccc"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_AdminKitaplar), @"mvc.1.0.view", @"/Views/Admin/AdminKitaplar.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\_ViewImports.cshtml"
using site;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\_ViewImports.cshtml"
using site.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1263073e0e4d76b6d56ada1282d723f60afaaccc", @"/Views/Admin/AdminKitaplar.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4905027877af4a4749cfbf023c0ec7fa3830a63c", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Admin_AdminKitaplar : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<libraryMVC.Entities.Kitap>>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\Admin\AdminKitaplar.cshtml"
  
    Layout = "~/Views/Shared/_AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
            DefineSection("Css", async() => {
                WriteLiteral("\r\n<style>\r\n    tr {\r\n        transition: all .5s;\r\n    }\r\n</style>\r\n");
            }
            );
            WriteLiteral(@"<div class=""jumbotron mt-2"">
    <div>
        <h2 style=""float:left;"" class=""text-info display-4"">Kitap Listesi</h2>
    </div>
    <div class=""searchSection"">
        <input class=""form-control"" style=""max-width: 100px;"" placeholder=""ID"" id=""id"" type=""number"" />&nbsp;
        <input class=""form-control"" style=""max-width: 200px;"" placeholder=""Ara"" id=""searchString"" type=""text"" />
    </div>
    <table class=""table table-hover mt-3 table-striped"">
        <thead>
            <th>Kitap No</th>
            <th>Kitap Adı</th>
            <th>Kitap Yazarı</th>
            <th>Kitap Baskı Yılı</th>
            <th>Kitap Sayfa Sayısı</th>
            <th>Kitap Dili</th>
            <th>Kitap Yayın Evi</th>
            <th>Kitap Açıklama</th>
            <th width=""155px"">İşlemler</th>
        </thead>
        <tbody id=""kitaplarTable""></tbody>
    </table>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
<script>
    $(document).ready(function () {
        let searchString = $(""#searchString"");
        let kitaplarTable = $(""#kitaplarTable"");
        $.ajax({
            url: ""/Kitap/KitaplarSearchBySearchString"",
            method: ""GET"",
            success: function (datas) {
                let html = getDatas(datas)
                kitaplarTable.empty();
                kitaplarTable.append(html);
                idAnimation();
            }
        })
        searchString.keyup(function () {
            if (searchString.val() == """") {
                $.ajax({
                    url: ""/Kitap/KitaplarSearchBySearchString?searchString="" + searchString.val(),
                    method: ""GET"",
                    success: function (datas) {
                        let html = getDatas(datas)
                        kitaplarTable.empty();
                        kitaplarTable.append(html);
                    }
                })
            }
            if (searchString.val().l");
                WriteLiteral(@"ength > 1) {
                $.ajax({
                    url: ""/Kitap/KitaplarSearchBySearchString?searchString="" + searchString.val(),
                    method: ""GET"",
                    success: function (datas) {
                        let html = getDatas(datas)
                        kitaplarTable.empty();
                        kitaplarTable.append(html);
                    }
                })
            }
        })
    })
    $(document).ready(function () {
        let kitaplarTable = $(""#kitaplarTable"");
        let id = $(""#id"");
        id.keyup(function () {
            if (id.val() != """") {
                $.ajax({
                    url: ""/Kitap/KitaplarSearchById?id="" + id.val(),
                    method: ""GET"",
                    success: function (data) {
                        let html = getData(data)
                        kitaplarTable.empty();
                        kitaplarTable.append(html);
                    },
                    error: func");
                WriteLiteral(@"tion () {
                        showErrorAlert(""Kitap Bulunamadı"");
                    }
                })
            } else {
                $.ajax({
                    url: ""/Kitap/KitaplarSearchById?id="" + id.val(),
                    method: ""GET"",
                    success: function (datas) {
                        let html = getDatas(datas)
                        kitaplarTable.empty();
                        kitaplarTable.append(html);
                    }
                })
            }
        })
    })
    function getData(data) {
        return generatorHtml(data);
    }
    function getDatas(datas) {
        let html = """";
        datas.forEach(data => {
            html += generatorHtml(data);
        })
        return html;
    }
    function idAnimation() {
        let getid = window.location.href.split(""#"")[1];
        $(""tr#"" + getid).addClass(""bg-warning"");
        setTimeout(() => {
            $(""tr#"" + getid).removeClass(""bg-warning"");
       ");
                WriteLiteral(@" }, 1000)
    }
    function generatorHtml(data) {
        let html = `
                        <tr id=""${data.kitapNo}"">
                            <td>${data.kitapNo}</td>
                            <td>${data.kitapAd}</td>
                            <td>${data.kitapYazari}</td>
                            <td>${data.kitapBaskiYil}</td>
                            <td>${data.kitapSayfaSayi}</td>
                            <td>${data.kitapDil}</td>
                            <td>${data.kitapYayinEvi}</td>
                            <td>${data.kitapAciklama}</td>
                            <td>
                                <button type=""button"" class=""btn btn-danger"" data-toggle=""modal"" data-target=""#modal${data.kitapNo}"" title=""${data.kitapAd} Sil"">
                                    <i class=""fa-solid fa-trash""></i>
                                </button>
                                <a style=""cursor:pointer;"" class=""btn btn-primary text text-white"" onClick=""window.location.");
                WriteLiteral(@"href='/Admin/EditAdminKitaplar/${data.kitapNo}'""
                                role=""button"" title=""${data.kitapAd} Düzenle"">
                                    <i class=""fa-solid fa-pen-to-square""></i>
                                </a>
                                <!-- Modal -->
                                <div class=""modal fade"" id=""modal${data.kitapNo}"" role=""dialog"" tabindex=""-1""
                                    aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
                                    <div class=""modal-dialog"">
                                        <div class=""modal-content"">
                                            <div class=""modal-header"">
                                                <h5 class=""modal-title"" id=""exampleModalLabel"">Kayıt Siliniyor</h5>
                                                <button type=""button"" class=""btn-close"" data-dismiss=""modal""
                                                aria-label=""Close"">X</button>
              ");
                WriteLiteral(@"                              </div>
                                            <div class=""modal-body"">
                                                <span class=""text-danger"">${data.kitapNo} - ${data.kitapAd}</span>
                                                <br>
                                                Bu Kaydı Silmek İstediğinizden Emin misiniz?
                                            </div>
                                            <div class=""modal-footer"">
                                                <a class=""btn btn-secondary text text-white"" data-dismiss=""modal"">İptal</a>
                                                <a class=""btn btn-danger text text-white"" href=""/Kitap/DeleteKitaplar/${data.kitapNo}"">Sil</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
         ");
                WriteLiteral(@"           `
        return html;
    }
    function showSuccessAlert(message) {
        const Toast = Swal.mixin({
            toast: true,
            position: 'bottom-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        })

        Toast.fire({
            icon: 'success',
            title: message
        })
    }
</script>
");
#nullable restore
#line 189 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\Admin\AdminKitaplar.cshtml"
 if (ViewBag.Message != null && ViewBag.Message.EndsWith("başarıyla güncellendi"))
{

#line default
#line hidden
#nullable disable
                WriteLiteral("<script>\r\n    showSuccessAlert(\"");
#nullable restore
#line 192 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\Admin\AdminKitaplar.cshtml"
                 Write(ViewBag.Message);

#line default
#line hidden
#nullable disable
                WriteLiteral("\")\r\n</script>\r\n");
#nullable restore
#line 194 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\Admin\AdminKitaplar.cshtml"
}

#line default
#line hidden
#nullable disable
#nullable restore
#line 195 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\Admin\AdminKitaplar.cshtml"
 if(ViewBag.Message != null && ViewBag.Message.EndsWith("başarıyla eklendi"))
{

#line default
#line hidden
#nullable disable
                WriteLiteral("<script>\r\n    showSuccessAlert(\"");
#nullable restore
#line 198 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\Admin\AdminKitaplar.cshtml"
                 Write(ViewBag.Message);

#line default
#line hidden
#nullable disable
                WriteLiteral("\")\r\n</script>\r\n");
#nullable restore
#line 200 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\Admin\AdminKitaplar.cshtml"
}

#line default
#line hidden
#nullable disable
#nullable restore
#line 201 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\Admin\AdminKitaplar.cshtml"
 if(ViewBag.Message != null && ViewBag.Message.EndsWith("Başarıyla Giriş Yapıldı"))
{

#line default
#line hidden
#nullable disable
                WriteLiteral("<script>\r\n    showSuccessAlert(\"");
#nullable restore
#line 204 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\Admin\AdminKitaplar.cshtml"
                 Write(ViewBag.Message);

#line default
#line hidden
#nullable disable
                WriteLiteral("\")\r\n</script>\r\n");
#nullable restore
#line 206 "C:\Users\lolem\Desktop\MVClibraryAutomation\libraryMVC\Views\Admin\AdminKitaplar.cshtml"
}

#line default
#line hidden
#nullable disable
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<libraryMVC.Entities.Kitap>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
